const width_threshold = 480; var defaultOrientation = 0; window.addEventListener("orientationchange", function () { location.reload() }, !1); const getPolynomialRegression = (o, t) => { t = t || 2; let e = []; return regression("polynomial", o, t).points.forEach(o => e.push(Math.ceil(100 * o[1]) / 100)), e }, getExponentialRegression = o => { let t = []; o.forEach((o, e) => t.push([e + 1, o])); let e = []; return regression("exponential", t).points.forEach(o => e.push(Math.ceil(100 * o[1]) / 100)), e }; function getData() { let o = [], t = [], e = [], a = [], n = [], i = [], s = []; $.ajax({ type: "GET", url: "/boletim", success: function (l) { let r = [], d = l.length; for (let c = 0; c < d; c++)r = l[c], o.push(ajusteDataHora(r.data)), t.push(r.novosCasos), e.push(r.totalCasos), a.push(r.novosObitos), n.push(r.totalObitos), i.push([c, r.novosCasos]), 0 === r.novosCasos ? s.push(.1) : s.push(r.totalCasos); let c = getPolynomialRegression(i, 2), h = getExponentialRegression(s); drawCasosPorDiaChart(o, t, c), drawCasosAcumuladosChart(o, e, h), drawObitosPorDiaChart(o, a), drawObitosAcumuladosChart(o, n) } }) } function drawCasosPorDiaChart(o, t, e) { $("#casosPorDiaChart").length && (ctxLine = document.getElementById("casosPorDiaChart").getContext("2d"), optionsLine = { scales: { yAxes: [{ scaleLabel: { display: !0, labelString: "Nº de casos" } }] } }, optionsLine.maintainAspectRatio = !($(window).width() < width_threshold), configLine = { type: "bar", data: { labels: o, datasets: [{ label: "Total", data: t, fill: !1, borderColor: "rgb(75, 192, 192,0.8)", backgroundColor: "rgb(75, 192, 192,0.8)", lineTension: .1 }, { label: "Tendência*", data: e, fill: !1, borderColor: "rgba(255,99,132,1)", backgroundColor: "rgba(255,99,132,1)", lineTension: .1, type: "line" }] }, options: optionsLine }, lineChart = new Chart(ctxLine, configLine)) } function drawObitosPorDiaChart(o, t, e) { $("#obitosPorDiaChart").length && (ctxLine = document.getElementById("obitosPorDiaChart").getContext("2d"), optionsLine = { scales: { yAxes: [{ scaleLabel: { display: !0, labelString: "Nº de óbitos" } }] } }, optionsLine.maintainAspectRatio = !($(window).width() < width_threshold), configLine = { type: "bar", data: { labels: o, datasets: [{ label: "Covid-19", data: t, fill: !1, borderColor: "rgb(75, 192, 192, 1)", backgroundColor: "rgb(75, 192, 192, 1)", lineTension: .1 }] }, options: optionsLine }, lineChart = new Chart(ctxLine, configLine)) } function drawCasosAcumuladosChart(o, t, e) { $("#casosAcumuladosChart").length && (ctxLine = document.getElementById("casosAcumuladosChart").getContext("2d"), optionsLine = { scales: { yAxes: [{ scaleLabel: { display: !0, labelString: "Nº de casos" } }] } }, optionsLine.maintainAspectRatio = !($(window).width() < width_threshold), configLine = { type: "line", data: { labels: o, datasets: [{ label: "Total", data: t, fill: !1, borderColor: "rgb(75, 192, 192, 0.8)", backgroundColor: "rgb(75, 192, 192, 0.8)", lineTension: .1 }, { label: "Tendência*", data: e, fill: !1, borderColor: "rgba(255,99,132,1)", backgroundColor: "rgba(255,99,132,1)", lineTension: .1 }] }, options: optionsLine }, lineChart = new Chart(ctxLine, configLine)) } function drawObitosAcumuladosChart(o, t, e) { $("#obitosAcumuladosChart").length && (ctxLine = document.getElementById("obitosAcumuladosChart").getContext("2d"), optionsLine = { scales: { yAxes: [{ scaleLabel: { display: !0, labelString: "Nº de óbitos" } }] } }, optionsLine.maintainAspectRatio = !($(window).width() < width_threshold), configLine = { type: "line", data: { labels: o, datasets: [{ label: "Covid-19", data: t, fill: !1, borderColor: "rgb(75, 192, 192)", backgroundColor: "rgb(75, 192, 192)", lineTension: .1 }] }, options: optionsLine }, lineChart = new Chart(ctxLine, configLine)) } function updateChartOptions() { $(window).width() < width_threshold ? optionsLine && (optionsLine.maintainAspectRatio = !1) : optionsLine && (optionsLine.maintainAspectRatio = !0) } function ajusteDataHora(o) { var t = o.dayOfMonth, e = o.monthValue, a = o.year, n = o.hour, i = o.minute; if (t < 10 && (t = "0" + t), e < 10 && (e = "0" + e), n < 10 && (n = "0" + n), i < 10 && (minute = "0" + i), null == n && null == i) var s = t + "/" + e + "/" + a; else s = t + "/" + e + "/" + a + " " + n + ":" + i; return s }