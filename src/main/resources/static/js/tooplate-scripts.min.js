const width_threshold = 480; var defaultOrientation = 0; window.addEventListener("orientationchange", function () { location.reload() }, !1); const getPolynomialRegression = (t, o) => { o = o || 2; let e = []; return regression("polynomial", t, o).points.forEach(t => e.push(Math.ceil(100 * t[1]) / 100)), e }, getExponentialRegression = t => { let o = []; t.forEach((t, e) => o.push([e + 1, t])); let e = []; return regression("exponential", o).points.forEach(t => e.push(Math.ceil(100 * t[1]) / 100)), e }; function getData() { let t = [], o = [], e = [], i = [], n = [], a = [], s = []; $.ajax({ type: "GET", url: "/boletim", success: function (l) { let r = [], d = l.length; for (let c = 0; c < d; c++)r = l[c], t.push(ajusteDataHora(r.data)), o.push(r.novosCasos), e.push(r.totalCasos), i.push(r.novosObitos), n.push(r.totalObitos), a.push([c, r.novosCasos]), 0 === r.novosCasos ? s.push(.1) : s.push(r.totalCasos); let c = getPolynomialRegression(a, 2), h = getExponentialRegression(s); drawCasosPorDiaChart(t, o, c), drawCasosAcumuladosChart(t, e, h), drawObitosPorDiaChart(t, i), drawObitosAcumuladosChart(t, n) } }) } function drawCasosPorDiaChart(t, o, e) { $("#casosPorDiaChart").length && (ctxLine = document.getElementById("casosPorDiaChart").getContext("2d"), optionsLine = { scales: { yAxes: [{ scaleLabel: { display: !0, labelString: "Nº de casos" } }] } }, optionsLine.maintainAspectRatio = !($(window).width() < width_threshold), configLine = { type: "bar", data: { labels: t, datasets: [{ label: "Total", data: o, fill: !1, borderColor: "rgb(75, 192, 192,0.8)", backgroundColor: "rgb(75, 192, 192,0.8)", lineTension: .1 }, { label: "Tendência*", data: e, fill: !1, borderColor: "rgba(255,99,132,1)", backgroundColor: "rgba(255,99,132,1)", lineTension: .1, type: "line" }] }, options: optionsLine }, lineChart = new Chart(ctxLine, configLine)) } function drawObitosPorDiaChart(t, o, e) { $("#obitosPorDiaChart").length && (ctxLine = document.getElementById("obitosPorDiaChart").getContext("2d"), optionsLine = { scales: { yAxes: [{ scaleLabel: { display: !0, labelString: "Nº de óbitos" } }] } }, optionsLine.maintainAspectRatio = !($(window).width() < width_threshold), configLine = { type: "bar", data: { labels: t, datasets: [{ label: "Covid-19", data: o, fill: !1, borderColor: "rgb(75, 192, 192, 1)", backgroundColor: "rgb(75, 192, 192, 1)", lineTension: .1 }] }, options: optionsLine }, lineChart = new Chart(ctxLine, configLine)) } function drawCasosAcumuladosChart(t, o, e) { $("#casosAcumuladosChart").length && (ctxLine = document.getElementById("casosAcumuladosChart").getContext("2d"), optionsLine = { scales: { yAxes: [{ scaleLabel: { display: !0, labelString: "Nº de casos" } }] } }, optionsLine.maintainAspectRatio = !($(window).width() < width_threshold), configLine = { type: "line", data: { labels: t, datasets: [{ label: "Total", data: o, fill: !1, borderColor: "rgb(75, 192, 192, 0.8)", backgroundColor: "rgb(75, 192, 192, 0.8)", lineTension: .1 }, { label: "Tendência*", data: e, fill: !1, borderColor: "rgba(255,99,132,1)", backgroundColor: "rgba(255,99,132,1)", lineTension: .1 }] }, options: optionsLine }, lineChart = new Chart(ctxLine, configLine)) } function drawObitosAcumuladosChart(t, o, e) { $("#obitosAcumuladosChart").length && (ctxLine = document.getElementById("obitosAcumuladosChart").getContext("2d"), optionsLine = { scales: { yAxes: [{ type: "logarithmic", ticks: { min: 0, max: 6e3, callback: function (t, o, e) { return Number(t.toString()) } }, afterBuildTicks: function (t) { t.ticks = [], t.ticks.push(0), t.ticks.push(1e3), t.ticks.push(2e3), t.ticks.push(3e3), t.ticks.push(4e3), t.ticks.push(5e3), t.ticks.push(6e3) }, scaleLabel: { display: !0, labelString: "Nº de óbitos" } }] } }, optionsLine.maintainAspectRatio = !($(window).width() < width_threshold), configLine = { type: "line", data: { labels: t, datasets: [{ label: "Covid-19", data: o, fill: !1, borderColor: "rgb(75, 192, 192)", backgroundColor: "rgb(75, 192, 192)", lineTension: .1 }] }, options: optionsLine }, lineChart = new Chart(ctxLine, configLine)) } function updateChartOptions() { $(window).width() < width_threshold ? optionsLine && (optionsLine.maintainAspectRatio = !1) : optionsLine && (optionsLine.maintainAspectRatio = !0) } function ajusteDataHora(t) { var o = t.dayOfMonth, e = t.monthValue, i = t.year, n = t.hour, a = t.minute; if (o < 10 && (o = "0" + o), e < 10 && (e = "0" + e), n < 10 && (n = "0" + n), a < 10 && (minute = "0" + a), null == n && null == a) var s = o + "/" + e + "/" + i; else s = o + "/" + e + "/" + i + " " + n + ":" + a; return s }